@charset "UTF-8";
@import "en_langs.css";
@namespace xml "http://www.w3.org/XML/1998/namespace";

etym:lang(ru) {display: none}
tr:lang(ru) {display: none}
def:lang(ru) {display: none}
note:lang(ru) {display: none}
biblScope[xml|lang="ru"] {display: none}
bibl[xml|lang="ru"] {display: none}

sense > sense {display: none}
sense > sense:has(tr:lang(en)) {display: inline !important;}
sense > sense:has(def:lang(en)) {display: inline !important;}

q[rendition~="#rend_doublequotes"]::before {content: "“";}
q[rendition~="#rend_doublequotes"]::after {content: "”";}
/*q > q[rendition~="#rend_doublequotes"]::before {content: "‘";}*/
/*q > q[rendition~="#rend_doublequotes"]::after {content: "’";}*/
/*q > q[rendition~="#rend_doublequotes"]:last-child::before {content: "«";}*/
/*q > q[rendition~="#rend_doublequotes"]:last-child::after {content: "";}*/

*[rendition~="#rend_smallcaps"] {letter-spacing: 3px}
name {letter-spacing: 3px}

example > quote:lang(ru) {display:none}
quote:lang(ru) + tr::before {content: ""}

example > tr q::before {content: "‘";}
example > tr q::after {content: "’";}
/*example > tr q[rendition~="#rend_singlequotes"]::before {content: "‘";}
example > tr q[rendition~="#rend_singlequotes"]::after {content: "’";}*/
example > tr > q + q::before {content: ", ‘"}

/*:lang(os) > lang:empty {content: "Ossetic"}*/
:lang(os) > usg > lang:empty {content: "Ossetic"}
/*:lang(os-x-iron) > lang:empty {content: "Iron"}*/
:lang(os-x-iron) > usg > lang:empty {content: "Iron"}
/*:lang(os-x-digor) > lang:empty {content: "Digor"}*/
:lang(os-x-digor) > usg > lang:empty {content: "Digor"}
/*:lang(os-x-south) > lang:empty {content: "South Ossetic"}*/
:lang(os-x-south) > usg > lang:empty {content: "South Ossetic"}
/*:lang(os-x-ksan) > lang:empty {content: "Ksan Ossetic"}*/
:lang(os-x-ksan) > usg > lang:empty {content: "Ksan Ossetic"}

/**[extralang~="os"] > lang:empty {-oxy-append-content: ", Ossetic"}
*[extralang~="os-x-iron"] > lang:empty {-oxy-append-content: ", Iron"}
*[extralang~="os-x-digor"] > lang:empty {-oxy-append-content: ", Digor"}
*[extralang~="os-x-south"] > lang:empty {-oxy-append-content: ", South Ossetic"}
*[extralang~="os-x-ksan"] > lang:empty {-oxy-append-content: ", Ksan Ossetic"}*/

entry > ref:before {content: " see ";}
/*entry > usg + ref::before {content: " see ";}*/

sense > sense:has(tr:lang(en)) + sense:has(tr:lang(en)):before {content: ", "}
sense > sense:has(def:lang(en)) + sense:has(def:lang(en)):before {content: ", "}