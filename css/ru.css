@charset "UTF-8";
@import "ru_langs.css";
@namespace xml "http://www.w3.org/XML/1998/namespace";

etym:lang(en) {display: none}
tr:lang(en) {display: none}
def:lang(en) {display: none}
note:lang(en) {display: none}
biblScope:lang(en) {display: none}

sense > sense {display: none}
sense > sense:has(tr:lang(ru)) {display: inline !important;}
sense > sense:has(def:lang(ru)) {display: inline !important;}

q[rendition~="#rend_doublequotes"]::before {content: "„";}
q[rendition~="#rend_doublequotes"]::after {content: "“";}
q > q[rendition~="#rend_doublequotes"]::before {content: "«";}
q > q[rendition~="#rend_doublequotes"]::after {content: "»";}
/*q > q[rendition~="#rend_doublequotes"]:last-child::before {content: "«";}*/
/*q > q[rendition~="#rend_doublequotes"]:last-child::after {content: "»";}*/

*[rendition~="#rend_smallcaps"] {letter-spacing: 3px}

example > tr q::before {content: "„";}
example > tr q::after {content: "“";}
example > tr q[rendition~="#rend_singlequotes"]::before {content: "‘";}
example > tr q[rendition~="#rend_singlequotes"]::after {content: "’";}
example > tr > q + q::before {content: ", „"}

/*:lang(os) > lang:empty {content: "ос."}*/
:lang(os) > usg > lang:empty {content: "ос."}
/*:lang(os-x-iron) > lang:empty {content: "и."}*/
:lang(os-x-iron) > usg > lang:empty {content: "и."}
/*:lang(os-x-digor) > lang:empty {content: "д."}*/
:lang(os-x-digor) > usg > lang:empty {content: "д."}
/*:lang(os-x-south) > lang:empty {content: "ю."}*/
:lang(os-x-south) > usg > lang:empty {content: "ю."}
/*:lang(os-x-ksan) > lang:empty {content: "ксан."}*/
:lang(os-x-ksan) > usg > lang:empty {content: "ксан."}

/**[extralang~="os"] > lang:empty {-oxy-append-content: ", ос."}
*[extralang~="os-x-iron"] > lang:empty {-oxy-append-content: ", и."}
*[extralang~="os-x-digor"] > lang:empty {-oxy-append-content: ", д."}
*[extralang~="os-x-south"] > lang:empty {-oxy-append-content: ", ю."}
*[extralang~="os-x-ksan"] > lang:empty {-oxy-append-content: ", ксан."}*/

entry > ref:before {content: " см. ";}
/*entry > usg + ref::before {content: " см. ";}*/

tr oRef {font-style: normal; letter-spacing: 3px}

sense > sense + sense:has(tr:lang(ru)):before {-oxy-prepend-content: ", "}

tr ref {letter-spacing: 3px; font-style: inherit}